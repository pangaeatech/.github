# Adds a new issue to Redmine for the specified pull request.
#
# Example Usage:
# --------------
# name: My favorite workflow
# on:
#   pull_request:
#     types: [opened]
# jobs:
#   add-to-redmine:
#     if: ${{ github.actor == 'dependabot[bot]' }}
#     permissions:
#       contents: read
#       pull-requests: write
#     uses: pangaeatech/.github/.github/workflows/add-to-redmine.yml@main
#     with:
#       pr_url: ${{github.event.pull_request.html_url}}
#       pr_subject: ${{github.event.pull_request.title}}
#       pr_body: ${{github.event.pull_request.body}}
#       rm_url: "https://redmine.mycompany.com/"
#       rm_project_id: "testproject"
#       rm_tracker_id: 13
#       rm_version_id: 10
#     secrets:
#       rm_key: ${{ SECRETS.REDMINE_API_KEY }}

name: Add To Redmine
on:
  workflow_call:
    inputs:
      pr_url:
        required: true
        type: string
      pr_subject:
        required: true
        type: string
      pr_body:
        required: false
        type: string
      rm_url:
        required: true
        type: string
      rm_project_id:
        required: true
        type: string
      rm_tracker_id:
        required: false
        type: string
      rm_version_id:
        required: false
        type: string
    secrets:
      rm_key:
        required: true
jobs:
  annotate:
    runs-on: ubuntu-latest
    steps:
      - name: setup environment
        run: |
          sudo apt-get install -y jq curl pandoc

      - name: create payload
        run: |
          BODY=$(echo "Pull Request: [$PR_URL]($PR_URL)

             $RM_BODY" | pandoc -f gfm -t textile);
          jq --null-input \
             --arg key "$RM_KEY" \
             --arg subj "$RM_SUBJECT" \
             --arg desc "$BODY" \
             --arg proj "$RM_PROJECT_ID" \
             --arg trac "$RM_TRACKER_ID" \
             --arg vers "$RM_VERSION_ID" \
             '{key:$key,issue:{project_id:$proj,tracker_id:$trac,subject:$subj,description:$desc,fixed_version_id:$vers}}' > body.json
        env:
          PR_URL: ${{ inputs.pr_url }}
          PR_SUBJECT: ${{ inputs.pr_subject }}
          PR_BODY: ${{ inputs.pr_body }}
          RM_PROJECT_ID: ${{ inputs.rm_project_id }}
          RM_TRACKER_ID: ${{ inputs.rm_tracker_id }}
          RM_VERSION_ID: ${{ inputs.rm_version_id }}
          RM_KEY: ${{ secrets.rm_key }}

      - name: send to redmine
        run: |
          curl -s -X POST -H "Content-Type: application/json" -d "@body.json" "$RM_URL/issues.json" > issue.txt
        env:
          RM_URL: ${{ inputs.rm_url }}

      - name: Debug
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./issue.txt

      - name: update pull request
        run: |
          TaskId=$(cat issue.txt | jq '.issue.id')
          if [ -z "$TaskId" ]; then
          cat issue.txt
          exit 1
          else
          gh pr comment "$PR_URL" -b "Added to Redmine as [Task $TaskId]($RM_URL/issues/$TaskId)";
          fi;
        env:
          PR_URL: ${{ inputs.pr_url }}
          RM_URL: ${{ inputs.rm_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INDEX: ${{ steps.package.outputs.content }}

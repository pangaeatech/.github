# Updates a pull request created by dependabot for an NPM-based dependency to
# identify the direct dependencies that are impacted.
#
# Example Usage:
# --------------
# name: My favorite workflow
# on:
#   pull_request:
#     types: [opened, synchronize, reopened]
# jobs:
#   annotate-npm-dependencies:
#     if: ${{ github.actor == 'dependabot[bot]' }}
#     permissions:
#       contents: read
#       pull-requests: write
#     uses: pangaeatech/.github/.github/workflows/annotate-npm-dependencies.yml@main
#     with:
#       pr_url: ${{github.event.pull_request.html_url}}
#       branch: ${{github.head_ref}}
#
# NOTE: This workflow is currently incompatible with the
# "pull-request-branch-name.separator" dependabot configuration setting.

name: Annotate NPM Dependencies
on:
  workflow_call:
    inputs:
      pr_url:
        required: true
        type: string
      branch:
        required: true
        type: string
jobs:
  annotate:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@master
      - name: Generate comment
        run: |
          readarray -d "/" -t parts<<<"${BRANCH}";
          if [ "${parts[0]}" = "dependabot" -a "${parts[1]}" = "npm_and_yarn" ]; then
          dir="/";
          if [ ! -z ${parts[3]} ]; then dir="${parts[2]}"; cd $dir; fi;
          npm install;
          echo "### \`${PR_DEPS//,/, }\` in \`${dir}\`" > body.txt;
          echo "\`\`\`" >> body.txt;
          npm ls ${PR_DEPS//,/ } >> body.txt;
          echo "\`\`\`" >> body.txt;
          gh pr comment "$PR_URL" -F body.txt;
          else
          echo "Skipping ${BRANCH}"
          fi;
        env:
          PR_URL: ${{ inputs.pr_url }}
          BRANCH: ${{ inputs.branch }}
          PR_DEPS: ${{ steps.metadata.outputs.dependency-names }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
